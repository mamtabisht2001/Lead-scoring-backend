generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

//  product/offer table
model Offer {
    id              String   @id @default(uuid())
    name            String
    value_props     String[] 
    ideal_use_cases String[] 
    createdAt       DateTime @default(now())
    updatedAt       DateTime @updatedAt

    leads       Lead[]
    scoredLeads ScoredLead[]

    @@map("offers")
}

//  uploaded lead table
model Lead {
    id           String   @id @default(uuid())
    name         String
    role         String
    company      String
    industry     String
    location     String
    linkedin_bio String?
    offerId      String?
    offer        Offer?   @relation(fields: [offerId], references: [id], onDelete: SetNull)
    createdAt    DateTime @default(now())
    updatedAt    DateTime @updatedAt

    scoredLead ScoredLead?

    @@index([offerId])
    @@map("leads")
}

//  scored lead results table
model ScoredLead {
    id        String   @id @default(uuid())
    name      String
    role      String
    company   String
    industry  String
    location  String
    intent    String
    score     Int
    reasoning String   @db.Text
    ruleScore Int
    aiPoints  Int
    breakdown Json
    leadId    String   @unique
    lead      Lead     @relation(fields: [leadId], references: [id], onDelete: Cascade)
    offerId   String
    offer     Offer    @relation(fields: [offerId], references: [id], onDelete: Cascade)
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    @@index([offerId])
    @@index([intent])
    @@index([score])
    @@map("scored_leads")
}
